# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.ssh.insert_key = false
  
  config.vm.box = "ubuntu/focal64"

  # Docker
  config.vm.define "docker" do |node|
    node.vm.hostname = "dvm.dob.exam"

    node.vm.provider :virtualbox do |config_vbox|
      config_vbox.customize ["modifyvm", :id, "--memory", "1024"]
    end

    node.vm.network "private_network",
      name: "vboxnet0",
      ip: "192.168.120.102",
      netmask: "24",
      hostname: true

    # Application
    node.vm.network "forwarded_port",
      guest: 5000, 
      host: 8000, 
      auto_correct: true

    # Docker remote
    node.vm.network "forwarded_port",
      guest: 2375, 
      host: 2375, 
      auto_correct: true

    node.vm.synced_folder "sync", "/sync"
    node.vm.provision "shell", path: "provision.sh" 
  end

  # Jenkins
  config.vm.define "jenkins" do |node|
    node.vm.hostname = "jvm.dob.exam"

    node.vm.provider :virtualbox do |config_vbox|
      config_vbox.customize ["modifyvm", :id, "--memory", "2048"]
    end

    node.vm.network "private_network",
      name: "vboxnet0",
      ip: "192.168.120.101",
      netmask: "24",
      hostname: true

    # Jenkins
    node.vm.network "forwarded_port",
      guest: 8080, 
      host: 8001, 
      auto_correct: true

    node.vm.synced_folder "sync", "/sync"
    node.vm.provision "shell", path: "provision.sh" 
  end

  # Ansible And Nagios
  config.vm.define "ansible" do |node|
    node.vm.hostname = "anvm.dob.exam"

    node.vm.provider :virtualbox do |config_vbox|
      config_vbox.customize ["modifyvm", :id, "--memory", "768"]
    end

    node.vm.network "private_network",
      name: "vboxnet0",
      ip: "192.168.120.100",
      netmask: "24",
      hostname: true

    # nagios
    node.vm.network "forwarded_port",
      guest: 80, 
      host: 8002, 
      auto_correct: true

    node.vm.synced_folder "sync", "/sync"
    node.vm.provision "shell", path: "provision.sh" 
    node.vm.provision "shell", path: "provision_ansible.sh" 
  end
  
end
