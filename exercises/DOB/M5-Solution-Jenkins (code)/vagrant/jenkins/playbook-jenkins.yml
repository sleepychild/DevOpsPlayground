---
- hosts: all

  vars:
    my_jenkins_plugins:
      build-pipeline-plugin:
        enabled: yes
      ssh:
        enabled: yes
      ssh-slaves:
        enabled: yes
      git:
        enabled: yes
      github:
        enabled: yes
      log-parser:
        enabled: yes
      copyartifact:
        enabled: yes
      template-project:
        enabled: yes

  roles:
    - geerlingguy.java
    - geerlingguy.jenkins

  tasks:
    - name: Add jenkins host
      lineinfile:
        path: /etc/hosts
        line: '192.168.99.100 jenkins.dob.lab jenkins'
    - name: Add dob-db host
      lineinfile:
        path: /etc/hosts
        line: '192.168.99.101 docker.dob.lab docker'
    - name: Open port 8080/tcp
      firewalld:
        port: 8080/tcp
        permanent: true
        state: enabled
        immediate: true
    - name: Install plugins
      jenkins_plugin:
        name: "{{ item.key }}"
        timeout: 90
        url_username: admin
        url: http://localhost:8080
        url_password: admin
      register: my_jenkins_plugin_installed
      with_dict: "{{ my_jenkins_plugins }}"
      
    - name: Initiate the fact
      set_fact:
        jenkins_restart_required: no

    - name: Check if restart is required
      set_fact:
        jenkins_restart_required: yes
      when: item.changed
      with_items: "{{ my_jenkins_plugin_installed.results }}"

    - name: Restart Jenkins if required
      service:
        name: jenkins
        state: restarted
      when: jenkins_restart_required

    - name: Wait for Jenkins to start up
      uri:
        url: http://localhost:8080
        status_code: 200
        timeout: 5
      register: jenkins_service_status
      # Keep trying for 5 mins in 5 sec intervals
      retries: 60
      delay: 5
      until: >
          'status' in jenkins_service_status and
          jenkins_service_status['status'] == 200
      when: jenkins_restart_required

    - name: Reset the fact
      set_fact:
        jenkins_restart_required: no
      when: jenkins_restart_required

    - name: Plugin enabling
      jenkins_plugin:
        name: "{{ item.key }}"
        timeout: 90
        url_username: admin
        url: http://localhost:8080
        url_password: admin
        state: "{{ 'enabled' if item.value['enabled'] else 'disabled'}}"
      when: >
        'enabled' in item.value
      with_dict: "{{ my_jenkins_plugins }}"

    - name: Add Jenkins credentials
      command: /vagrant/jenkins-add-credentials.sh

    - name: Add Jenkins slave node
      command: /vagrant/jenkins-add-node.sh http://localhost:8080/ docker.dob.lab vagrant
      
    - name: Create Jenkins job
      command: /vagrant/jenkins-create-job.sh