---
#
# Example of a Play which installs plugins and handles Jenkins restarts during the state changes
#
- name: Jenkins Master play
  hosts: jenkins
  become: true
  vars:
    my_jenkins_plugins:
      build-pipeline-plugin:
        enabled: yes
      ssh:
        enabled: yes
      ssh-slaves:
        enabled: yes
      git:
        enabled: yes
      github:
        enabled: yes
      log-parser:
        enabled: yes
      copyartifact:
        enabled: yes
      workflow-aggregator:
        enabled: yes
      workflow-multibranch:
        enabled: yes
      docker-workflow:
        enabled: yes
      template-project:
        enabled: yes
  tasks:
    - name: Install plugins
      jenkins_plugin:
        name: "{{ item.key }}"
        timeout: 90
        url_username: admin
        url: http://localhost:8080
        url_password: vagrant
      with_dict: "{{ my_jenkins_plugins }}"

    - name: Restart Jenkins if required
      service:
        name: jenkins
        state: restarted

    - name: Wait for jenkins to start
      shell: sleep 120;

    - name: Plugin enabling
      jenkins_plugin:
        name: "{{ item.key }}"
        timeout: 90
        url_username: admin
        url: http://localhost:8080
        url_password: vagrant
        state: "{{ 'enabled' if item.value['enabled'] else 'disabled'}}"
      when: >
        'enabled' in item.value
      with_dict: "{{ my_jenkins_plugins }}"
